openapi: 3.0.0
info:
  title: Book API
  version: 1.0.0
  description: API endpoints for managing books in the Library Management System

components:
  schemas:
    Book:
      type: object
      required:
        - title
        - author
        - ISBN
        - quantity
      properties:
        id:
          type: integer
          description: The auto-generated id of the book
        title:
          type: string
          description: The title of the book
        author:
          type: string
          description: The book author
        ISBN:
          type: string
          description: The ISBN of the book
        quantity:
          type: integer
          description: The quantity of books available
        shelf_location:
          type: string
          description: The shelf location of the book

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /api/books:
    post:
      summary: Add a new book
      tags: [Books]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        201:
          description: Book added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: integer
        400:
          description: Missing required fields
        401:
          description: Unauthorized - Invalid or missing authentication token
        500:
          description: Server error

    get:
      summary: List all books
      tags: [Books]
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
        500:
          description: Server error

  /api/books/{id}:
    put:
      summary: Update a book
      tags: [Books]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        200:
          description: Book updated successfully
        400:
          description: No fields to update
        401:
          description: Unauthorized - Invalid or missing authentication token
        404:
          description: Book not found
        500:
          description: Server error

    delete:
      summary: Delete a book
      tags: [Books]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Book deleted successfully
        401:
          description: Unauthorized - Invalid or missing authentication token
        404:
          description: Book not found
        500:
          description: Server error

  /api/books/search:
    get:
      summary: Search for books
      tags: [Books]
      parameters:
        - in: query
          name: query
          required: true
          schema:
            type: string
          description: Search query string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
        400:
          description: Search query is required
        500:
          description: Server error